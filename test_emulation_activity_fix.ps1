# Test de la correction d'EmulationActivity
# V√©rification de l'initialisation manquante de RetroArchOverlaySystem

Write-Host "üéÆ Test de la correction d'EmulationActivity" -ForegroundColor Green
Write-Host "=========================================" -ForegroundColor Green

# V√©rifier les modifications d'EmulationActivity
Write-Host "`n1. V√©rification des modifications EmulationActivity:" -ForegroundColor Yellow

$emulationActivity = "app/src/main/java/com/fceumm/wrapper/EmulationActivity.java"
if (Test-Path $emulationActivity) {
    $content = Get-Content $emulationActivity -Raw
    
    if ($content -match "RetroArchOverlaySystem overlaySystem") {
        Write-Host "‚úì Variable overlaySystem ajout√©e" -ForegroundColor Green
    } else {
        Write-Host "‚úó Variable overlaySystem manquante" -ForegroundColor Red
    }
    
    if ($content -match "overlaySystem = RetroArchOverlaySystem.getInstance") {
        Write-Host "‚úì Initialisation de RetroArchOverlaySystem" -ForegroundColor Green
    } else {
        Write-Host "‚úó Initialisation de RetroArchOverlaySystem manquante" -ForegroundColor Red
    }
    
    if ($content -match "loadDefaultOverlay") {
        Write-Host "‚úì M√©thode loadDefaultOverlay ajout√©e" -ForegroundColor Green
    } else {
        Write-Host "‚úó M√©thode loadDefaultOverlay manquante" -ForegroundColor Red
    }
    
    if ($content -match "overlaySystem.loadOverlay") {
        Write-Host "‚úì Chargement d'overlay impl√©ment√©" -ForegroundColor Green
    } else {
        Write-Host "‚úó Chargement d'overlay manquant" -ForegroundColor Red
    }
    
    if ($content -match "overlaySystem.setOverlayEnabled") {
        Write-Host "‚úì Activation d'overlay impl√©ment√©e" -ForegroundColor Green
    } else {
        Write-Host "‚úó Activation d'overlay manquante" -ForegroundColor Red
    }
    
    if ($content -match "overlaySystem.clearAllTouches") {
        Write-Host "‚úì Nettoyage des touches impl√©ment√©" -ForegroundColor Green
    } else {
        Write-Host "‚úó Nettoyage des touches manquant" -ForegroundColor Red
    }
    
    if ($content -match "setContentView.*activity_retroarch") {
        Write-Host "‚úì Layout RetroArch utilis√©" -ForegroundColor Green
    } else {
        Write-Host "‚úó Layout RetroArch non utilis√©" -ForegroundColor Red
    }
    
    if ($content -match "setupPortraitLayout") {
        Write-Host "‚úì Configuration layout portrait" -ForegroundColor Green
    } else {
        Write-Host "‚úó Configuration layout portrait manquante" -ForegroundColor Red
    }
    
    if ($content -match "setupLandscapeLayout") {
        Write-Host "‚úì Configuration layout landscape" -ForegroundColor Green
    } else {
        Write-Host "‚úó Configuration layout landscape manquante" -ForegroundColor Red
    }
    
} else {
    Write-Host "‚úó EmulationActivity.java manquant" -ForegroundColor Red
}

# V√©rifier les imports n√©cessaires
Write-Host "`n2. V√©rification des imports:" -ForegroundColor Yellow

$imports = @(
    "RetroArchOverlaySystem",
    "OverlayRenderView",
    "Configuration"
)

foreach ($import in $imports) {
    if ($content -match "import.*$import") {
        Write-Host "‚úì Import $import" -ForegroundColor Green
    } else {
        Write-Host "‚úó Import $import manquant" -ForegroundColor Red
    }
}

# V√©rifier la structure du layout
Write-Host "`n3. V√©rification du layout activity_retroarch.xml:" -ForegroundColor Yellow

$layoutFile = "app/src/main/res/layout/activity_retroarch.xml"
if (Test-Path $layoutFile) {
    $layoutContent = Get-Content $layoutFile -Raw
    
    if ($layoutContent -match "game_viewport") {
        Write-Host "‚úì ID game_viewport pr√©sent" -ForegroundColor Green
    } else {
        Write-Host "‚úó ID game_viewport manquant" -ForegroundColor Red
    }
    
    if ($layoutContent -match "controls_area") {
        Write-Host "‚úì ID controls_area pr√©sent" -ForegroundColor Green
    } else {
        Write-Host "‚úó ID controls_area manquant" -ForegroundColor Red
    }
    
    if ($layoutContent -match "emulator_view") {
        Write-Host "‚úì ID emulator_view pr√©sent" -ForegroundColor Green
    } else {
        Write-Host "‚úó ID emulator_view manquant" -ForegroundColor Red
    }
    
    if ($layoutContent -match "overlay_render_view") {
        Write-Host "‚úì ID overlay_render_view pr√©sent" -ForegroundColor Green
    } else {
        Write-Host "‚úó ID overlay_render_view manquant" -ForegroundColor Red
    }
    
    if ($layoutContent -match "RelativeLayout") {
        Write-Host "‚úì Layout RelativeLayout utilis√©" -ForegroundColor Green
    } else {
        Write-Host "‚úó Layout RelativeLayout non utilis√©" -ForegroundColor Red
    }
    
} else {
    Write-Host "‚úó Layout activity_retroarch.xml manquant" -ForegroundColor Red
}

# V√©rifier les layouts d'orientation
Write-Host "`n4. V√©rification des layouts d'orientation:" -ForegroundColor Yellow

$layoutPort = "app/src/main/res/layout-port/activity_retroarch.xml"
$layoutLand = "app/src/main/res/layout-land/activity_retroarch.xml"

if (Test-Path $layoutPort) {
    Write-Host "‚úì Layout portrait pr√©sent" -ForegroundColor Green
} else {
    Write-Host "‚úó Layout portrait manquant" -ForegroundColor Red
}

if (Test-Path $layoutLand) {
    Write-Host "‚úì Layout landscape pr√©sent" -ForegroundColor Green
} else {
    Write-Host "‚úó Layout landscape manquant" -ForegroundColor Red
}

# V√©rifier la compilation
Write-Host "`n5. Test de compilation:" -ForegroundColor Yellow

try {
    Write-Host "Compilation en cours..." -ForegroundColor Yellow
    & ./gradlew assembleDebug 2>&1 | Tee-Object -FilePath "emulation_activity_fix_compile.log"
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úì Compilation r√©ussie!" -ForegroundColor Green
    } else {
        Write-Host "‚úó Erreurs de compilation d√©tect√©es" -ForegroundColor Red
        Write-Host "V√©rifiez le fichier emulation_activity_fix_compile.log" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚úó Erreur lors de la compilation: $_" -ForegroundColor Red
}

Write-Host "`n=== R√©sum√© de la correction ===" -ForegroundColor Yellow

Write-Host "‚úÖ Corrections apport√©es:" -ForegroundColor Green
Write-Host "  - Ajout de RetroArchOverlaySystem.getInstance()" -ForegroundColor White
Write-Host "  - Ajout de loadDefaultOverlay()" -ForegroundColor White
Write-Host "  - Ajout de overlaySystem.loadOverlay('nes.cfg')" -ForegroundColor White
Write-Host "  - Ajout de overlaySystem.setOverlayEnabled(true)" -ForegroundColor White
Write-Host "  - Ajout de overlaySystem.clearAllTouches()" -ForegroundColor White
Write-Host "  - Configuration des layouts portrait/landscape" -ForegroundColor White
Write-Host "  - Utilisation du layout activity_retroarch.xml" -ForegroundColor White

Write-Host "`nüéÆ Fonctionnalit√©s restaur√©es:" -ForegroundColor Cyan
Write-Host "  - Affichage des overlays dans les deux modes" -ForegroundColor White
Write-Host "  - Configuration automatique selon l'orientation" -ForegroundColor White
Write-Host "  - Chargement de l'overlay NES par d√©faut" -ForegroundColor White
Write-Host "  - Gestion des inputs tactiles" -ForegroundColor White
Write-Host "  - Split screen 50/50 en portrait" -ForegroundColor White
Write-Host "  - Full screen en landscape" -ForegroundColor White

Write-Host "`nüì± R√©sultat attendu:" -ForegroundColor Cyan
Write-Host "  - Mode Portrait: Jeu en haut (50%) + Contr√¥les en bas (50%)" -ForegroundColor White
Write-Host "  - Mode Landscape: Jeu plein √©cran + Overlay transparent" -ForegroundColor White
Write-Host "  - Overlays visibles et fonctionnels" -ForegroundColor White

Write-Host "`n=== Test termin√© ===" -ForegroundColor Green 