# Test de tous les overlays disponibles
# Script pour v√©rifier que tous les overlays fonctionnent apr√®s la correction

Write-Host "=== TEST DE TOUS LES OVERLAYS ===" -ForegroundColor Green
Write-Host "Date: $(Get-Date)" -ForegroundColor Yellow
Write-Host ""

# Liste des overlays √† tester
$overlays = @(
    "nes.cfg",
    "snes.cfg", 
    "gba.cfg",
    "genesis.cfg",
    "arcade.cfg",
    "nintendo64.cfg",
    "retropad.cfg",
    "psx.cfg",
    "dreamcast.cfg",
    "neogeo.cfg",
    "gameboy.cfg",
    "sms.cfg"
)

Write-Host "Overlays √† tester: $($overlays.Count)" -ForegroundColor Cyan
Write-Host ""

# V√©rifier que l'APK est install√©
Write-Host "V√©rification de l'installation..." -ForegroundColor Yellow
$packageName = "com.fceumm.wrapper"
$installed = adb shell pm list packages | Select-String $packageName

if ($installed) {
    Write-Host "‚úÖ Package install√©: $packageName" -ForegroundColor Green
} else {
    Write-Host "‚ùå Package non install√©: $packageName" -ForegroundColor Red
    Write-Host "Installation de l'APK..." -ForegroundColor Yellow
    adb install app/build/outputs/apk/debug/app-debug.apk
}

Write-Host ""

# Fonction pour tester un overlay
function Test-Overlay {
    param($overlayName)
    
    Write-Host "Test de l'overlay: $overlayName" -ForegroundColor Cyan
    
    # Lancer l'activit√© avec l'overlay
    $activity = "com.fceumm.wrapper.OverlayIntegrationActivity"
    $intent = "am start -n $packageName/$activity --es overlay_cfg $overlayName"
    
    Write-Host "Lancement: $intent" -ForegroundColor Gray
    adb shell $intent
    
    # Attendre que l'activit√© se lance
    Start-Sleep -Seconds 3
    
    # V√©rifier les logs pour voir si l'overlay s'est charg√©
    Write-Host "V√©rification des logs..." -ForegroundColor Gray
    $logs = adb logcat -d | Select-String "OverlayIntegration|RetroArchOverlaySystem" | Select-Object -Last 10
    
    $success = $false
    $hasError = $false
    
    foreach ($log in $logs) {
        if ($log -match "Overlay charg√© et activ√©: $overlayName") {
            $success = $true
            Write-Host "‚úÖ Overlay charg√© avec succ√®s" -ForegroundColor Green
        }
        if ($log -match "Erreur lors du chargement de l'overlay") {
            $hasError = $true
            Write-Host "‚ùå Erreur de chargement" -ForegroundColor Red
        }
        if ($log -match "‚úÖ Overlay s√©lectionn√©") {
            Write-Host "‚úÖ Overlay s√©lectionn√© correctement" -ForegroundColor Green
        }
        if ($log -match "‚ùå Aucun overlay appropri√© trouv√©") {
            Write-Host "‚ö†Ô∏è  Fallback utilis√©" -ForegroundColor Yellow
        }
    }
    
    if (-not $success -and -not $hasError) {
        Write-Host "‚ö†Ô∏è  Pas de confirmation de chargement" -ForegroundColor Yellow
    }
    
    # Fermer l'activit√©
    adb shell am force-stop $packageName
    Start-Sleep -Seconds 1
    
    Write-Host ""
    return $success
}

# Test de chaque overlay
$results = @{}
$successCount = 0

foreach ($overlay in $overlays) {
    $result = Test-Overlay $overlay
    $results[$overlay] = $result
    if ($result) {
        $successCount++
    }
}

# R√©sum√©
Write-Host "=== R√âSUM√â DES TESTS ===" -ForegroundColor Green
Write-Host ""

foreach ($overlay in $overlays) {
    $status = if ($results[$overlay]) { "‚úÖ" } else { "‚ùå" }
    Write-Host "$status $overlay" -ForegroundColor $(if ($results[$overlay]) { "Green" } else { "Red" })
}

Write-Host ""
Write-Host "R√©sultats: $successCount/$($overlays.Count) overlays fonctionnels" -ForegroundColor $(if ($successCount -eq $overlays.Count) { "Green" } else { "Yellow" })

if ($successCount -eq $overlays.Count) {
    Write-Host "üéâ TOUS LES OVERLAYS FONCTIONNENT !" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Certains overlays ne fonctionnent pas encore" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=== FIN DU TEST ===" -ForegroundColor Green 