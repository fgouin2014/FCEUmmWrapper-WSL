#!/bin/bash

# Script de diagnostic des logs FCEUmm Wrapper
# Analyse les logs pour identifier les probl√®mes et proposer des solutions

set -e

echo "=== Diagnostic des logs FCEUmm Wrapper ==="

# Fonction pour analyser les logs
analyze_logs() {
    local log_file="$1"
    
    if [ ! -f "$log_file" ]; then
        echo "‚ùå Fichier de logs non trouv√©: $log_file"
        echo "Utilisation: $0 [fichier_logs]"
        echo "Ou capturez les logs avec: adb logcat > logs.txt"
        exit 1
    fi
    
    echo "üìã Analyse du fichier: $log_file"
    echo ""
    
    # Analyser les SIGSEGV
    echo "üîç Analyse des SIGSEGV..."
    local sigsegv_count=$(grep -c "SIGSEGV\|segmentation fault" "$log_file" 2>/dev/null || echo "0")
    if [ "$sigsegv_count" -gt 0 ]; then
        echo "‚ùå $sigsegv_count SIGSEGV d√©tect√©(s)"
        echo "   Probl√®me: Le core LibRetro plante lors du chargement"
        echo "   Solution: Utiliser le wrapper am√©lior√© avec gestion des signaux"
    else
        echo "‚úÖ Aucun SIGSEGV d√©tect√©"
    fi
    
    # Analyser les commandes non support√©es
    echo ""
    echo "üîç Analyse des commandes non support√©es..."
    local unsupported_count=$(grep -c "commande non support√©e\|Environment callback non g√©r√©" "$log_file" 2>/dev/null || echo "0")
    if [ "$unsupported_count" -gt 0 ]; then
        echo "‚ö†Ô∏è  $unsupported_count commande(s) non support√©e(s)"
        echo "   Probl√®me: Le wrapper ne g√®re pas toutes les commandes LibRetro"
        echo "   Solution: Am√©liorer le callback environment"
    else
        echo "‚úÖ Toutes les commandes sont support√©es"
    fi
    
    # Analyser les erreurs de chargement de ROM
    echo ""
    echo "üîç Analyse des erreurs de chargement de ROM..."
    local rom_errors=$(grep -c "ROM.*√©choue\|√âchec.*ROM\|ROM.*non trouv√©e" "$log_file" 2>/dev/null || echo "0")
    if [ "$rom_errors" -gt 0 ]; then
        echo "‚ùå $rom_errors erreur(s) de chargement de ROM"
        echo "   Probl√®me: Les ROMs ne se chargent pas correctement"
        echo "   Solution: V√©rifier le format et les permissions des ROMs"
    else
        echo "‚úÖ Aucune erreur de chargement de ROM"
    fi
    
    # Analyser les probl√®mes de permissions
    echo ""
    echo "üîç Analyse des probl√®mes de permissions..."
    local permission_errors=$(grep -c "Permission denied\|access.*failed\|stat.*failed" "$log_file" 2>/dev/null || echo "0")
    if [ "$permission_errors" -gt 0 ]; then
        echo "‚ùå $permission_errors erreur(s) de permissions"
        echo "   Probl√®me: L'application n'a pas les permissions n√©cessaires"
        echo "   Solution: V√©rifier les permissions Android"
    else
        echo "‚úÖ Aucun probl√®me de permissions"
    fi
    
    # Analyser les probl√®mes de m√©moire
    echo ""
    echo "üîç Analyse des probl√®mes de m√©moire..."
    local memory_errors=$(grep -c "out of memory\|malloc.*failed\|new.*failed" "$log_file" 2>/dev/null || echo "0")
    if [ "$memory_errors" -gt 0 ]; then
        echo "‚ùå $memory_errors erreur(s) de m√©moire"
        echo "   Probl√®me: L'application manque de m√©moire"
        echo "   Solution: Optimiser l'utilisation m√©moire"
    else
        echo "‚úÖ Aucun probl√®me de m√©moire"
    fi
    
    # Analyser les probl√®mes de threads
    echo ""
    echo "üîç Analyse des probl√®mes de threads..."
    local thread_errors=$(grep -c "thread.*failed\|pthread.*error\|mutex.*error" "$log_file" 2>/dev/null || echo "0")
    if [ "$thread_errors" -gt 0 ]; then
        echo "‚ùå $thread_errors erreur(s) de threads"
        echo "   Probl√®me: Probl√®mes de synchronisation entre threads"
        echo "   Solution: Am√©liorer la gestion des threads"
    else
        echo "‚úÖ Aucun probl√®me de threads"
    fi
    
    # Analyser les performances
    echo ""
    echo "üîç Analyse des performances..."
    local performance_issues=$(grep -c "Skipped.*frames\|too much work\|performance.*issue" "$log_file" 2>/dev/null || echo "0")
    if [ "$performance_issues" -gt 0 ]; then
        echo "‚ö†Ô∏è  $performance_issues probl√®me(s) de performance"
        echo "   Probl√®me: L'application fait trop de travail sur le thread principal"
        echo "   Solution: Optimiser le rendu et d√©placer le travail vers les threads secondaires"
    else
        echo "‚úÖ Aucun probl√®me de performance d√©tect√©"
    fi
    
    # Analyser les probl√®mes de format vid√©o
    echo ""
    echo "üîç Analyse des probl√®mes de format vid√©o..."
    local video_errors=$(grep -c "pixel format\|video.*error\|format.*unsupported" "$log_file" 2>/dev/null || echo "0")
    if [ "$video_errors" -gt 0 ]; then
        echo "‚ùå $video_errors erreur(s) de format vid√©o"
        echo "   Probl√®me: Format vid√©o non support√©"
        echo "   Solution: Supporter plus de formats vid√©o"
    else
        echo "‚úÖ Aucun probl√®me de format vid√©o"
    fi
    
    # Analyser les probl√®mes audio
    echo ""
    echo "üîç Analyse des probl√®mes audio..."
    local audio_errors=$(grep -c "audio.*error\|sample.*rate\|audio.*failed" "$log_file" 2>/dev/null || echo "0")
    if [ "$audio_errors" -gt 0 ]; then
        echo "‚ùå $audio_errors erreur(s) audio"
        echo "   Probl√®me: Probl√®mes avec l'audio"
        echo "   Solution: Am√©liorer la gestion audio"
    else
        echo "‚úÖ Aucun probl√®me audio"
    fi
}

# Fonction pour proposer des solutions
propose_solutions() {
    echo ""
    echo "=== Solutions propos√©es ==="
    echo ""
    
    # V√©rifier si le wrapper am√©lior√© est utilis√©
    if grep -q "LibretroWrapper" "$1" 2>/dev/null; then
        echo "‚úÖ Le wrapper am√©lior√© est utilis√©"
    else
        echo "‚ùå Le wrapper am√©lior√© n'est pas utilis√©"
        echo "   Solution: Ex√©cuter ./integrate_wrapper_fix.sh"
    fi
    
    # V√©rifier la gestion des signaux
    if grep -q "SIGSEGV.*captur√©\|sigsetjmp" "$1" 2>/dev/null; then
        echo "‚úÖ La gestion des SIGSEGV est active"
    else
        echo "‚ùå La gestion des SIGSEGV n'est pas active"
        echo "   Solution: Utiliser le wrapper avec gestion des signaux"
    fi
    
    # V√©rifier les callbacks LibRetro
    if grep -q "Environment callback.*cmd=" "$1" 2>/dev/null; then
        echo "‚úÖ Les callbacks LibRetro sont configur√©s"
    else
        echo "‚ùå Les callbacks LibRetro ne sont pas configur√©s"
        echo "   Solution: Configurer les callbacks LibRetro"
    fi
    
    # V√©rifier le chargement des ROMs
    if grep -q "ROM.*charg√©e.*succ√®s" "$1" 2>/dev/null; then
        echo "‚úÖ Les ROMs se chargent correctement"
    else
        echo "‚ùå Probl√®me de chargement des ROMs"
        echo "   Solution: V√©rifier le format et les permissions des ROMs"
    fi
    
    echo ""
    echo "=== Recommandations ==="
    echo ""
    echo "1. Si des SIGSEGV sont d√©tect√©s :"
    echo "   - Utiliser le wrapper am√©lior√© avec gestion des signaux"
    echo "   - V√©rifier la compatibilit√© du core LibRetro"
    echo ""
    echo "2. Si des commandes non support√©es sont d√©tect√©es :"
    echo "   - Am√©liorer le callback environment"
    echo "   - Ajouter le support des nouvelles commandes LibRetro"
    echo ""
    echo "3. Si des probl√®mes de performance sont d√©tect√©s :"
    echo "   - Optimiser le rendu vid√©o"
    echo "   - D√©placer le travail vers les threads secondaires"
    echo ""
    echo "4. Si des probl√®mes de permissions sont d√©tect√©s :"
    echo "   - V√©rifier les permissions Android"
    echo "   - Utiliser les chemins appropri√©s pour les fichiers"
    echo ""
    echo "5. Pour am√©liorer la stabilit√© g√©n√©rale :"
    echo "   - Utiliser le wrapper avec gestion d'erreurs robuste"
    echo "   - Ajouter des logs d√©taill√©s pour le debug"
    echo "   - Impl√©menter un syst√®me de fallback"
}

# Fonction pour g√©n√©rer un rapport
generate_report() {
    local log_file="$1"
    local report_file="diagnostic_report_$(date +%Y%m%d_%H%M%S).txt"
    
    echo "üìä G√©n√©ration du rapport: $report_file"
    
    {
        echo "=== Rapport de diagnostic FCEUmm Wrapper ==="
        echo "Date: $(date)"
        echo "Fichier analys√©: $log_file"
        echo ""
        
        echo "=== R√©sum√© des probl√®mes ==="
        echo "SIGSEGV: $(grep -c "SIGSEGV\|segmentation fault" "$log_file" 2>/dev/null || echo "0")"
        echo "Commandes non support√©es: $(grep -c "commande non support√©e\|Environment callback non g√©r√©" "$log_file" 2>/dev/null || echo "0")"
        echo "Erreurs ROM: $(grep -c "ROM.*√©choue\|√âchec.*ROM\|ROM.*non trouv√©e" "$log_file" 2>/dev/null || echo "0")"
        echo "Erreurs permissions: $(grep -c "Permission denied\|access.*failed\|stat.*failed" "$log_file" 2>/dev/null || echo "0")"
        echo "Erreurs m√©moire: $(grep -c "out of memory\|malloc.*failed\|new.*failed" "$log_file" 2>/dev/null || echo "0")"
        echo "Probl√®mes performance: $(grep -c "Skipped.*frames\|too much work\|performance.*issue" "$log_file" 2>/dev/null || echo "0")"
        echo ""
        
        echo "=== Logs d'erreur importants ==="
        grep -E "(ERROR|FATAL|SIGSEGV|Exception)" "$log_file" | tail -20
        echo ""
        
        echo "=== Logs de debug ==="
        grep -E "(DEBUG|INFO.*wrapper|LibretroWrapper)" "$log_file" | tail -20
        echo ""
        
        echo "=== Recommandations ==="
        echo "1. Utiliser le wrapper am√©lior√© avec gestion des signaux"
        echo "2. Am√©liorer les callbacks LibRetro"
        echo "3. Optimiser les performances"
        echo "4. V√©rifier les permissions et formats de fichiers"
        echo "5. Ajouter plus de logs pour le debug"
        
    } > "$report_file"
    
    echo "‚úÖ Rapport g√©n√©r√©: $report_file"
}

# Fonction principale
main() {
    local log_file="$1"
    
    if [ -z "$log_file" ]; then
        echo "Capture des logs en cours..."
        adb logcat -d > logs.txt
        log_file="logs.txt"
        echo "Logs captur√©s dans: $log_file"
        echo ""
    fi
    
    analyze_logs "$log_file"
    propose_solutions "$log_file"
    generate_report "$log_file"
    
    echo ""
    echo "üéØ Diagnostic termin√© !"
    echo "Consultez le rapport g√©n√©r√© pour plus de d√©tails."
}

# Ex√©cuter le diagnostic
main "$1" 